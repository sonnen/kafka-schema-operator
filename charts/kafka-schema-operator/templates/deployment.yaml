apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubernetes.labels" . | nindent 4 }}
    {{- with .Values.deploymentLabels }}
    {{-  toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.deploymentAnnotations }}
    {{-  toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.operator.replicas }}
  selector:
    matchLabels:
      {{- include "kubernetes.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kubernetes.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{-  toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{-  toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: "{{ .Release.Name }}-service-account"
      containers:
        - name: {{ .Release.Name}}
          image: "{{ .Values.operator.image }}:{{ .Values.operator.version }}"
          imagePullPolicy: {{ .Values.operator.pullPolicy }}
          env:
            - name: SCHEMA_REGISTRY_BASE_URL
              value: "{{ .Values.schemaRegistry.baseUrl }}"
            - name: DEFAULT_CLEANUP_POLICY
              value: "{{ .Values.defaultCleanupPolicy }}"
            - name: DEFAULT_NORMALIZE
              value: "{{ .Values.defaultNormalize }}"
            - name: REQUEUE_DELAY
              value: {{ .Values.requeueDelay }}
{{/*            - name: SCHEMA_REGISTRY_KEY*/}}
{{/*              value: {{ .Values.schemaRegistry.apiKey }}*/}}
{{/*            - name: SCHEMA_REGISTRY_SECRET*/}}
{{/*              value: {{ .Values.schemaRegistry.apiSecret }}*/}}
          ports:
            - name: http
              containerPort: 65532
              protocol: TCP
          resources:
{{ .Values.operator.resources | toYaml | indent 12 }}
      terminationGracePeriodSeconds: 10
